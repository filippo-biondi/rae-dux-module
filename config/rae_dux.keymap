/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>

#define BASE_L  0
#define GAM_L   1
#define TRY_L   2
#define SYM_L   3
#define NUM_L   4
#define FUN_L   5
#define NAV_L   6
#define SYS_L   7
#define ITA_L   8
#define ITA_C_L 9

#define TAPPING_TERM 200
#define LONG_TAPPING_TERM 250
#define QUICK_TAPPING_TERM 200
#define COMBO_TIME 30
#define COMBO_TIME_LONG 60

#include "features/behavior_settings.dtsi"
#include "features/macros.dtsi"
#include "features/combos.dtsi"
#include "features/behaviors.dtsi"

/ {
	keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
                   &kp B        &kp L         &kp D               &kp W                &kp Z              &kp APOS           &kp F                &kp O                 &kp U         &kp J
                   &elhm LALT N &elhm LGUI R  &lhm LSHIFT T       &lhm LCTRL S         &kp G              &kp Y              &rhm LCTRL H         &rhm RSHIFT A         &erhm LGUI E  &erhm LALT I
                   &kp Q        &kp X         &kp M               &hard_lt ITA_L C     &kp V              &kp K              &hard_lt ITA_L P     &kp COMMA             &kp DOT       &kp FSLH
            		   /*&          &*/           &base_lt NUM_L ESC  &base_lt NAV_L SPACE &base_lt FUN_L TAB &base_lt SYM_L RET &repeat_lt NUM_L 0   &bspc_del_lt SYM_L 0  /*&           &*/
			>;
		};

		gaming_layer {
			bindings = <
                   &none        &kp Q         &none                 &kp E                &kp R              &kp Y              &kp U                &kp I              &kp O         &kp P
                   &kp LSHIFT   &kp A         &kp W                 &kp D                &kp F              &kp H              &kp J                &kp K              &kp L         &kp SEMI
                   &kp LCTRL    &none         &kp S                 &kp C                &kp V              &kp N              &kp M                &kp COMMA          &kp DOT       &kp FSLH
            		   /*&          &*/           &kp ESC               &trans               &kp TAB            &kp RET            &trans               &trans             /*&           &*/
			>;
		};


		try_layer {
			bindings = <
                   &kp Q        &kp W         &kp E                 &kp R                &kp T              &kp Y              &kp U                &kp I              &kp O         &kp P
                   &elhm LALT A &elhm LGUI S  &lhm LSHIFT D         &lhm LCTRL F         &kp G              &kp H              &rhm LCTRL J         &rhm RSHIFT K      &erhm LGUI L  &erhm LALT SEMI
                   &kp Z        &kp X         &kp C                 &hard_lt ITA_L V     &kp B              &kp N              &hard_lt ITA_L M     &kp COMMA          &kp DOT       &kp FSLH
            		   /*&          &*/           &trans                &trans               &trans             &trans             &trans               &trans             /*&           &*/
			>;
		};

		sym_layer {
			bindings = <
            		   &none          &none         &none            &none              &none              &none           &none            &none               &none       &kp APOS
                   &kp EXCL       &kp AT        &kp HASH         &kp DLLR           &kp PRCNT          &none           &rhm LCTRL PLUS  &rhm RSHIFT STAR    &sk LGUI    &sk LALT
                   &kp BSLH       &kp PIPE      &double_tilde    &kp AMPS           &double_grave      &none           &none            &trans              &trans      &kp FSLH
                   /*&            &*/           &kp ESC          &kp SPACE          &kp TAB            &kp RET         &kp BSPC         &base_lt NAV_L DEL  /*&           &*/
			>;
		};

		num_layer {
			bindings = <
                   &none         &none            &sl NAV_L         &none              &none              &none         &none          &none                 &none          &none
                   &elhm LALT N1 &elhm LGUI N2    &lhm LSHIFT N3    &lhm LCTRL N4      &kp PLUS           &none         &rhm LCTRL N7  &rhm RSHIFT N8        &erhm LGUI N9  &erhm LALT N0
                   &none         &none            &kp STAR          &kp N5             &none              &none         &kp N6         &kp COMMA             &kp DOT        &kp FSLH
            		   /*&           &*/              &kp MINUS         &trans             &kp UNDER          &trans        &trans         &trans                /*&            &*/
			>;
		};

		fun_layer {
			bindings = <
                   &none                     &none         &none         &none            &none              &kp &none           &kp F7           &kp F8       &kp F9        &none
                   &sk LALT                  &sk LGUI      &sk LSHFT     &sk LCTRL        &none              &kp F11             &kp F4           &kp F5       &kp F6        &kp F10
                   &none                     &none         &none         &none            &none              &kp F12             &kp F1           &kp F2       &kp F3        &none
            		   /*&                       &*/           &kp ESC       &kp SPACE        &kp TAB            &kp RET             &kp BSPC         &kp DEL      /*&           &*/
			>;
		};

		nav_layer {
			bindings = <
                   &none            &none             &none             &none             &none              &none               &kp LG(MINUS)    &kp LG(PLUS)          &none           &none
                   &qhm LALT LC(Z)  &qhm LGUI LC(X)   &qhm LSHIFT LC(C) &qhm LCTRL LC(V)  &kp LA(TAB)        &none               &kp LEFT         &kp UP                &kp RIGHT       &kp PG_UP
                   &none            &none             &kp LC(LS(C))     &kp LC(LS(V))     &none              &none               &kp HOME         &kp DOWN              &kp END         &kp PG_DN
                   /*&              &*/               &trans            &trans            &trans             &trans              &mo SYS_L        &trans                /*&             &*/
			>;
		};

		system_layer {
			bindings = <
                   &bt BT_CLR_ALL  &bt BT_CLR      &bt BT_SEL 0             &bt BT_SEL 1       &none            &none               &bt BT_PRV       &bt BT_NXT            &none           &none
                   &kp C_BRI_DN    &kp C_BRI_UP    &kp PSCRN                &kp C_PREV         &none            &none               &kp C_NEXT       &kp C_PP              &kp C_VOL_DN    &kp C_VOL_UP
                   &none           &power_off_td   &soft_off_param C_SLEEP  &kp C_AL_LOCK      &none            &none               &none            &none                 &kp C_MUTE      &none
                   /*&             &*/             &trans                   &trans             &trans           &trans              &trans           &trans                /*&             &*/
			>;
		};

		ita_layer {
			bindings = <
                   &none        &none         &none         &none              &none              &none               &none            &td_o                   &td_u          &none
                   &none        &none         &mo ITA_C_L   &none              &none              &none               &none            &td_a_lt ITA_C_L 0      &td_e          &td_i
                   &none        &none         &none         &c_e               &none              &none               &none            &none                   &none          &none
                   /*&          &*/           &kp ESC       &kp SPACE          &kp TAB            &kp RET             &kp BSPC         &kp DEL                  /*&           &*/
			>;
		};

		ita_layer_capital {
			bindings = <
                   &none         &none         &none         &none              &none              &none           &none        &td_o_cap               &td_u_cap              &none
                   &none         &none         &none         &none              &none              &none           &none        &td_a_cap               &td_e_cap              &td_i_cap
                   &none         &none         &none         &capital_c_e       &none              &none           &none        &none                   &none                  &none
                   /*&           &*/           &kp ESC       &kp SPACE          &kp TAB            &kp RET         &kp BSPC     &kp DEL                 /*&                    &*/
			>;
		};

	};
};

